@page "/login"
@using System.Net
@using CyberbianSite.Client.Authentication
@using CyberbianSite.Shared
@inject HttpClient httpClient
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<div class="rs-features bg1 pt-126 md-pt-71 md-pb-75">
    <div class="container relative">
        <div class="row">
            <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
                <div class="mb-3 text-center">
                    <h4>Please sign-in with your account</h4>
                </div>
                <div class="mb-3">
                    <label>User Name</label>
                    <input @bind="loginRequest.UserName" class="form-control" placeholder="User Name" />
                </div>
                <div class="mb-3">
                    <label>Password</label>
                    <input @bind="loginRequest.Password" type="password" class="form-control" placeholder="Password" />
                </div>
                <div class="mb-3 d-grid gap-2">
                    <button @onclick="Authenticate" class="btn btn-primary">Login</button>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private LoginRequest loginRequest = new LoginRequest();

    private async Task Authenticate()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginRequest>("/api/Account/Login", loginRequest);

        if (loginResponse.IsSuccessStatusCode)
        {
            var userSession = await loginResponse.Content.ReadFromJsonAsync<UserSession>();
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(userSession);
            navManager.NavigateTo("/dashboard", true);
        }
        else if (loginResponse.StatusCode == HttpStatusCode.Unauthorized)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            return;
        }
    }
}
